# This workflow will build and unit test the project.
# If the workflow is running on the "main" branch, then
# semantic-release is also run to create a new release (if
# warranted by the new commits being built).

name: Build & Test

on: 
  push:
    branches: ['**']
  pull_request:
    branches: ['**']
  workflow_dispatch:
    # Allow workflow to be triggered manually.

jobs:
  build:
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    name: Build & Test (Go v${{ matrix.go-version }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: ['1.16.x', '1.17.x', '1.18.x', '1.19.x']

    env:
      GO111MODULE: on

    steps:
      - uses: actions/checkout@v3
      - name: Setup Go v${{ matrix.go-version }}
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go-version }}
      - name: Install dependencies
        run: |
          curl -sfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh| sh -s -- -b $(go env GOPATH)/bin v1.49.0
          golangci-lint version
          curl -sfL https://raw.githubusercontent.com/securego/gosec/master/install.sh | sh -s -- -b $(go env GOPATH)/bin
          gosec version
      - name: Build/Test Project
        run: make ci      

  create_release:
    needs: build
    # Only run this job on the main branch and only for our min version of Go.
    if: "github.ref_name == 'main'"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: ['1.16.x']

    steps:
    - uses: actions/checkout@v3
      with:
        persist-credentials: false

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.16.x

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 14

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.8

    - name: Install Deployment Tools
      run: |
        npm install -g semantic-release
        npm install -g @semantic-release/changelog
        npm install -g @semantic-release/exec
        npm install -g @semantic-release/git
        npm install -g @semantic-release/github
        npm install -g @semantic-release/commit-analyzer
        pip install --user bump2version

    - name: Create & Tag Release
      env:
        GH_TOKEN: ${{ secrets.GH_TOKEN }}
      run: npx semantic-release
